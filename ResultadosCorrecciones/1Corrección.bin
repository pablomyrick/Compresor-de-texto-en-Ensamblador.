Fecha: 30/10/24     21:14


------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'BuscaCar', pasándole una cadena de 10 caracteres y
trata de localizar el situado (solo) en la posición 0
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'BuscaCar', pasándole una cadena de 10 caracteres y
trata de localizar el situado al menos en la posición 0
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'BuscaCar', pasándole una cadena de 10 caracteres y
trata de localizar el situado en la posición 0 y en otras.
El valor del parámetro 'from' es mayor que cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'BuscaCar', pasándole una cadena de 22 caracteres y
trata de localizar el situado en la posición 20. Todos los
registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'BuscaCar', pasándole una cadena larga y trata
de localizar el situado en una de las posiciones finales que
forma parte del rango definido por los parámetros 'from' y
'to'. El valor numérico del carácter buscado es mayor de 150
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'BuscaCar', pasándole una cadena de 10 caracteres y trata
de localizar el que se indica en el primer parámetro, que en este
caso tiene un valor numérico mayor de 150 y está situado hacia el
final de la cadena 
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'PoneBitA1', pasándole un mapa de bits de solo 1 Byte
con todos sus bits a cero y un número de bit intermedio
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'PoneBitA1' dos veces, pasándole un mapa de bits de
solo 1 Byte con todos sus bits a cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'PoneBitA1' varias veces, pasándole un mapa de bits
de un único Byte que parte de algunos bits a 0 y otros a 1
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'PoneBitA1' varias veces, pasándole un mapa de bits
de tres Bytes que parte de algunos bits a 0 y otros a 1. Todos
los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'PoneBitA1' varias veces consecutivas, pasándole un
mapa de bits formado por 36 Bytes con una mezcla de bits a uno
y a cero y pone a uno diferentes bits de esos bytes; los
registros parten de valores iniciales distintos de cero. Todos
los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama una vez a 'LeeBit', pasándole un mapa de bits de un
único Byte con tres bits a 1 y el resto a 0
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama dos veces a 'LeeBit', pasándole un mapa de bits de un
único Byte con tres bits a 1 y el resto a 0
_Error de alineamiento a palabra_ 
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama varias veces a 'LeeBit', pasándole un mapa de bits de un
único Byte con más de tres bits a 1
_Error de alineamiento a palabra_ 
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'LeeBit' varias veces consecutivas pasándole un
mapa de bits formado por tres bytes con varios bits a 1 y 
seleccionando diferentes bits que la prueba almacena en bytes
consecutivos previamente reservados. Todos los registros
parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'LeeBit' varias veces consecutivas pasándole un mapa
de bits formado por 36 bytes con una mezcla de bits a uno y a cero
y seleccionando diferentes bits que la prueba almacena en bytes
consecutivos. Todos los registros parten de valores iniciales
distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de 20 caracteres que
no admite compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Comprime', pasándole una cadena de 10 caracteres que
no admite compresión.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de 32 caracteres que
admite la máxima compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de caracteres igual
a la del ejemplo detallado en la presentación del proyecto (N=4)
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de caracteres igual
a la del ejemplo detallado en la presentación del proyecto (N=4).
Todos los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Comprime', pasándole una cadena de caracteres igual
a la del ejemplo detallado en la presentación del proyecto (N=4).
Comprueba uso de PoneBitA1.
Todos los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de longitud mayor
de 30 caracteres y múltiples repeticiones de subcadenas formadas
por caracteres cuyo código ascii corresponde a valores cercanos
al mínimo o al máximo
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Comprime', pasándole una cadena de longitud mayor
de 30 caracteres y múltiples repeticiones de subcadenas formadas
por caracteres cuyo código ascii corresponde a valores cercanos
al mínimo o al máximo. Comprueba uso de PoneBitA1
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de longitud mayor
de 20 caracteres y múltiples repeticiones de subcadenas formadas
por caracteres cuyo código ascii corresponde a valores cercanos
al mínimo
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de longitud mayor
de 20 caracteres y múltiples repeticiones de subcadenas formadas
por caracteres cuyo código ascii corresponde a valores cercanos
al máximo
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de longitud mayor
de 20 caracteres idénticos
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de longitud mayor
de 20 caracteres con subcadenas repetidas de 4 caracteres. Todos
los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de longitud mayor
de 256 caracteres que solo tiene 2 caracteres diferentes.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de 28 caracteres que
admite un nivel intermedio de compresión: en el resultado sustituye
cuatro secuencias de caracteres por referencias a subcadenas previas
y hace copia literal de otros cuatro caracteres, por lo que el campo
de bits contiene un total de 8 bits.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Comprime', pasándole una cadena de 35 caracteres que
admite un nivel intermedio de compresión: en el resultado sustituye
tres secuencias de caracteres por referencias a subcadenas previas
de tamaño 5, 4 y 5 caracteres. El resto de caracteres se copia
directamente sin comprimir.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de 20 caracteres que no admite
compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de 20 caracteres que no admite
compresión. Comprueba uso de LeeBit
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de 32 caracteres de texto que
admite la máxima compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de caracteres igual a la del ejemplo
detallado en la presentación del proyecto (N=4)
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de caracteres igual a la del ejemplo
detallado en la presentación del proyecto (N=4). Todos los
registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de caracteres igual a la del ejemplo
detallado en la presentación del proyecto (N=4). Todos los
registros parten de valores iniciales distintos de cero
Comprueba uso de LeeBit
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 30 caracteres
y múltiples repeticiones de subcadenas formadas por
caracteres cuyo código ascii corresponde a valores cercanos
al mínimo o al máximo
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 20 caracteres
y múltiples repeticiones de subcadenas formadas por caracteres
cuyo código ascii corresponde a valores cercanos al mínimo
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 20 caracteres
y múltiples repeticiones de subcadenas formadas por caracteres
cuyo código ascii corresponde a valores cercanos al mínimo.
Comprueba uso de LeeBit
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 20 caracteres
y múltiples repeticiones de subcadenas formadas por caracteres
cuyo código ascii corresponde a valores cercanos al máximo
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 20 caracteres
idénticos
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 20 caracteres
con subcadenas repetidas de 4 caracteres. Todos los registros
parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de longitud mayor de 256 caracteres
que solo tiene 2 caracteres diferentes.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de 28 caracteres que admite un nivel
intermedio de compresión: la parte de caracteres y referencias
está formada por cuatro caracteres y cuatro referencias.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Descomprime', pasándole un texto comprimido que
corresponde a una cadena de 35 caracteres que admite un nivel
intermedio de compresión: la parte de caracteres y referencias
está formada por trece caracteres y tres referencias.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de 16 caracteres
idénticos.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI. Provoca error (1).
Llama a 'Verifica', pasándole una cadena de 10 caracteres que no
admite compresión. Provoca un resultado erróneo de Verifica.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI. Provoca error (2).
Llama a 'Verifica', pasándole una cadena de 10 caracteres que no
admite compresión. Provoca un resultado erróneo de Verifica.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Verifica', pasándole una cadena de 10 caracteres que no
admite compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de 32 caracteres que
admite la máxima compresión.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de 32 caracteres que
admite la máxima compresión. Tras el terminador, la cadena va
seguida por un carácter arbitrario.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de 33 caracteres que
admite la máxima compresión.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Verifica', pasándole una cadena de 33 caracteres que
admite la máxima compresión.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de 33 caracteres que
admite la máxima compresión.
Tras el terminador, la cadena va seguida por caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Verifica', pasándole una cadena de 33 caracteres que
admite la máxima compresión.
Tras el terminador, la cadena va seguida por caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de caracteres similar
a la del ejemplo detallado en la presentación del proyecto
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de caracteres similar
a la del ejemplo detallado en la presentación del proyecto. Tras
el terminador, la cadena va seguida por caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI. Provoca error (1)
Llama a 'Verifica', pasándole una cadena de caracteres similar
a la del ejemplo detallado en la presentación del proyecto. Tras
el terminador, la cadena va seguida por caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI. Provoca error (2)
Llama a 'Verifica', pasándole una cadena de caracteres similar
a la del ejemplo detallado en la presentación del proyecto. Tras
el terminador, la cadena va seguida por caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Verifica', pasándole una cadena de caracteres similar
a la del ejemplo detallado en la presentación del proyecto. Tras
el terminador, la cadena va seguida por caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de más de 260
caracteres. Tras el terminador, la cadena va seguida por
caracteres arbitrarios.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de longitud mayor
de 20 caracteres con subcadenas repetidas de 4 caracteres.
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- Llama a 'Verifica', pasándole una cadena de longitud mayor
de 20 caracteres con subcadenas repetidas de 4 caracteres. Todos
los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Verifica', pasándole una cadena de longitud mayor
de 20 caracteres con subcadenas repetidas de 4 caracteres. Todos
los registros parten de valores iniciales distintos de cero
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
- 7a Llama a 'Verifica', pasándole una cadena de 28 caracteres que
admite un nivel intermedio de compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI. Provoca error (2)
Llama a 'Verifica', pasándole una cadena de 28 caracteres que
admite un nivel intermedio de compresión
------------------------------------------------------------------
Su implementación falla en una prueba en que se hace lo siguiente:
-datsi Usa subrutinas auxiliares del DATSI.
Llama a 'Verifica', pasándole una cadena de 28 caracteres que
admite un nivel intermedio de compresión
---------------------------------
	Casos de prueba:       89
	Pasados: 21
	Con error: 68
	Alineamiento a palabra erróneo: 2
---------------------------------
Nº de pruebas que falla por subrutina: 
Subr LongCad 0 de 9
Subr BuscaCar 6 de 11
Subr CoincidenCad 0 de 7
Subr Comprime 15 de 15
Subr Descomprime 15 de 15
Subr Verifica 22 de 22
Subr PoneBitA1 5 de 5
Subr LeeBit 5 de 5
Fecha: 30/10/24     21:14

